// Date: 27/12/2012 01:54:43
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package pixelmon.client.models.trainers;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelMaleChildSwimmer extends ModelBase
{
  //fields
    ModelRenderer Leg1;
    ModelRenderer Leg2;
    ModelRenderer Body;
    ModelRenderer Head;
    ModelRenderer Armtube1;
    ModelRenderer Armtube2;
    ModelRenderer Bodytube1;
    ModelRenderer Bodytube2;
    ModelRenderer Bodytube3;
    ModelRenderer Bodytube4;
    ModelRenderer Arm1;
    ModelRenderer Arm2;
  
  public ModelMaleChildSwimmer()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Leg1 = new ModelRenderer(this, 0, 0);
      Leg1.addBox(0F, 0F, 0F, 1, 4, 1);
      Leg1.setRotationPoint(-2F, 20F, 0F);
      Leg1.setTextureSize(64, 32);
      Leg1.mirror = true;
      setRotation(Leg1, 0F, 0F, 0F);
      Leg2 = new ModelRenderer(this, 0, 0);
      Leg2.addBox(0F, 0F, 0F, 1, 4, 1);
      Leg2.setRotationPoint(0F, 20F, 0F);
      Leg2.setTextureSize(64, 32);
      Leg2.mirror = true;
      setRotation(Leg2, 0F, 0F, 0F);
      Body = new ModelRenderer(this, 12, 0);
      Body.addBox(0F, 0F, 0F, 4, 6, 2);
      Body.setRotationPoint(-2.5F, 14F, -0.5F);
      Body.setTextureSize(64, 32);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
      Head = new ModelRenderer(this, 41, 0);
      Head.addBox(0F, 0F, 0F, 4, 4, 3);
      Head.setRotationPoint(-2.5F, 10F, -1F);
      Head.setTextureSize(64, 32);
      Head.mirror = true;
      setRotation(Head, 0F, 0F, 0F);
      Armtube1 = new ModelRenderer(this, 26, 0);
      Armtube1.addBox(0F, 0F, 0F, 1, 3, 3);
      Armtube1.setRotationPoint(-3.5F, 12.5F, -1F);
      Armtube1.setTextureSize(64, 32);
      Armtube1.mirror = true;
      setRotation(Armtube1, 0F, 0F, 0F);
      Armtube2 = new ModelRenderer(this, 26, 0);
      Armtube2.addBox(0F, 0F, 0F, 1, 3, 3);
      Armtube2.setRotationPoint(1.5F, 12.5F, -1F);
      Armtube2.setTextureSize(64, 32);
      Armtube2.mirror = true;
      setRotation(Armtube2, 0F, 0F, 0F);
      Bodytube1 = new ModelRenderer(this, 0, 16);
      Bodytube1.addBox(0F, 0F, 0F, 4, 1, 1);
      Bodytube1.setRotationPoint(-2.5F, 18F, -1.5F);
      Bodytube1.setTextureSize(64, 32);
      Bodytube1.mirror = true;
      setRotation(Bodytube1, 0F, 0F, 0F);
      Bodytube2 = new ModelRenderer(this, 0, 13);
      Bodytube2.addBox(0F, 0F, 0F, 1, 1, 4);
      Bodytube2.setRotationPoint(1.5F, 18F, -1.5F);
      Bodytube2.setTextureSize(64, 32);
      Bodytube2.mirror = true;
      setRotation(Bodytube2, 0F, 0F, 0F);
      Bodytube3 = new ModelRenderer(this, 0, 16);
      Bodytube3.addBox(0F, 0F, 0F, 4, 1, 1);
      Bodytube3.setRotationPoint(-2.5F, 18F, 1.5F);
      Bodytube3.setTextureSize(64, 32);
      Bodytube3.mirror = true;
      setRotation(Bodytube3, 0F, 0F, 0F);
      Bodytube4 = new ModelRenderer(this, 0, 13);
      Bodytube4.addBox(0F, 0F, 0F, 1, 1, 4);
      Bodytube4.setRotationPoint(-3.5F, 18F, -1.5F);
      Bodytube4.setTextureSize(64, 32);
      Bodytube4.mirror = true;
      setRotation(Bodytube4, 0F, 0F, 0F);
      Arm1 = new ModelRenderer(this, 0, 23);
      Arm1.addBox(0F, 0F, 0F, 1, 5, 1);
      Arm1.setRotationPoint(-2.5F, 14F, 1F);
      Arm1.setTextureSize(64, 32);
      Arm1.mirror = true;
      setRotation(Arm1, 0F, 3.141593F, -0.2443461F);
      Arm2 = new ModelRenderer(this, 0, 23);
      Arm2.addBox(0F, 0F, 0F, 1, 5, 1);
      Arm2.setRotationPoint(1.5F, 14F, 0F);
      Arm2.setTextureSize(64, 32);
      Arm2.mirror = true;
      setRotation(Arm2, 0F, 0F, -0.2443461F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    Leg1.render(f5);
    Leg2.render(f5);
    Body.render(f5);
    Head.render(f5);
    Armtube1.render(f5);
    Armtube2.render(f5);
    Bodytube1.render(f5);
    Bodytube2.render(f5);
    Bodytube3.render(f5);
    Bodytube4.render(f5);
    Arm1.render(f5);
    Arm2.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
  }

}
